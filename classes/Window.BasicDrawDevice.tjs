class Window {
/**
 * @description Window.BasicDrawDevice クラスは、このインスタンスを Window.drawDevice に登録して使用するための DrawDevice で、標準的な描画機能を提供します。
 * Windowsでのみ利用できます。
 * マルチプラットフォーム版では、非推奨となりました。
 * デフォルトでCanvasを使用した描画となり、DrawDeviceはオプションで-graphicsystem=drawdeviceを指定する必要があります。
 * その場合 Canvasでの描画は出来なくなります。
 */
	class BasicDrawDevice {
	/**
	 * BasicDrawDevice オブジェクトの構築
	 *
	 * @description Window.BasicDrawDevice クラスのオブジェクトを構築します。
	 * 初期状態で Window.drawDevice にはこのクラスのインスタンスが登録されているので、新たに登録する必要はありません。
	 */
	function BasicDrawDevice();

	/**
	 * 内部デバイス再生成
	 *
	 * @description 内部デバイスの再生成を行います。
	 * 通常使用することはありません。
	 */
	function recreate( );

	/**
	 * 画面が回転されたとき(1.1.0以降)
	 *
	 * @param orientation 画面の向き( orientation ) です。
	 * 以下のいずれかの値になります。
	 *
	 * + oriUnknown (取得失敗/不明)
	 * + oriPortrait(縦向き)
	 * + oriLandscape(横向き)
	 *
	 * @param angle 角度です。
	 * 角度 ( angle ) は、0、90、180、270、-1 のいずれかで、取得できなかった時は-1となります。
	 * 角度は、そのデバイスデフォルトからの回転角なので、縦向きのデバイスでは縦向きで0となります。
	 * 通常のデバイスだと、横向きで0が多ようです。
	 * 縦向きが0になるのは最近の8インチタブレットなどで、縦向きが標準の向きとなっているものです。
	 * @param bpp  bits per pixel です。
	 * @param width 画面の幅です。
	 * @param height 画面の高さです。
	 * @description 画面が回転されたときに呼び出されるイベント関数を表します。
	 * @see Window.onDisplayRotate
	 * @see Window.displayOrientation
	 * @see Window.displayRotate
	 */
	event onDisplayRotate( orientation, angle, bpp, width, height);

	/**
	 * インターフェースオブジェクトを取得
	 *
	 * @description プラグインなどで DrawDevice オブジェクトを利用するためにあります。
	 */
	 property interface {
		 getter() { return value; }
	}
	}
};
