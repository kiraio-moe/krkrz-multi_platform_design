/**
 * @description VertexBinder is a class for associating VertexBuffer with vertex information to be input to the shader.
 * Set the ShaderProgram property to an instance of this class.
 * The VertexBinder set in the ShaderProgram is passed to the shader as vertex information when called by Canvas.drawMesh.
 */
class VertexBinder {

	/**
	 * constructor
	 * @param vertex VertexBuffer to associate
	 * @param stride Specifies the stride for each vertex in bytes. If you want to pass XY coordinates as float type, sizeof (float) * 2, so specify 8.
	 * @param componentCount Pass the number of vertex elements. Specify 2 if you want to pass XY coordinates. 4 for RGBA color.
	 * @param offset Specifies the offset from the beginning of VertexBuffer in bytes. It is used when multiple vertex information is stored in one Vertex Buffer.
	 * @param normalize Specifies whether to normalize. If true, it will be normalized between [-1.0 to 0.0 to 1.0] when it is a non-float type and sent to the shader.
	 */
	function VertexBinder( vertex:VertexBuffer, stride:int=0, componentCount:int=4, offset:int=0, normalize:bool=false );

	/**
	 * Vertex buffer (VertexBuffer class readonly)
	 */
	property vertexBuffer;

	/**
	 * Stride per vertex (number of bytes)
	 * @description The default is 0.
	 */
	property stride;

	/**
	 * Number of vertex elements (1-4)
	 * @description The default is 4
	 * For XY coordinates, specify 2.
	 */
	property componentCount;

	/**
	 * Vertex buffer offset (in bytes)
	 * @description The default is 0.
	 * Specifies the byte offset from the beginning of VertexBuffer.
	 * It is used when multiple vertex information is stored in one Vertex Buffer.
	 */
	property offset;

	/**
	 * Whether to normalize
	 * @description The default is false.
	 * If true, it will be normalized between [-1.0 to 0.0 to 1.0] when it is a non-float type and sent to the shader.
	 * Specify a color from 0 to 255 in ubyte format such as color information, normalize the color to 0.0 to 1.0, and specify it when using it in a shader.
	 */
	property normalize;
};
