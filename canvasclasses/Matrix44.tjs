
// 演算関係は最初は実装しない
// 最初は多数の変数を受け渡ししたりするのを回避するのが主目的
// テストのために一部メソッドは追加。
// 実使用だと乗算や現在の行列に移動量をかけるなど必要装に思うが……
class Matrix44 {

	functiont Matrix44();  単位行列で生成
	functiont Matrix44(m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44);

	/**
	 * マトリックス設定
	 */
	function set(m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44);
	function set(array);	// 1次元配列からコピー
	function set(matrix);	// matrixからコピー

	// function identity();  単位行列化
	function reset();

	/**
	 * 移動量設定
	 * 行列のXY移動位置に値を設定します。
	 * 設定のみで現在の行列との演算などは行われません。
	 * @param x 設定するX座標値
	 * @param y 設定するY座標値
	 */
	function setTranslate( x:real, y:real );

	/**
	 * 拡大率設定
	 * 行列のXY拡大位置に値を設定します。
	 * 設定のみで現在の行列との演算などは行われません。
	 * @param x 設定するX軸拡大率
	 * @param y 設定するY軸拡大率
	 */
	function setScale( x:real, y:real );

	/**
	 * 回転量設定
	 * Z軸回転を設定します。
	 * 設定のみで現在の行列との演算などは行われません。
	 * @param degree 回転角度
	 */
	function setRotate( degree:real );

	property array;	// 1次元配列で受け取る(r)

	property m11;
	property m12;
	property m13;
	property m14;
	property m21;
	property m22;
	property m23;
	property m24;
	property m31;
	property m32;
	property m33;
	property m34;
	property m41;
	property m42;
	property m43;
	property m44;
};
