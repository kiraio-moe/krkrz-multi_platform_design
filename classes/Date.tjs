/**
 * @description The function to create a Date object from a string and the function to create a string from an object are not implemented yet, but the others are almost compatible with JavaScript Date.
 */
class Date {
	/**
	 * Current date and time constructor
	 * @description Holds the current date and time when this constructor was executed.
	 */
	function Date();

	/**
	 * Date string constructor
	 * @description The date string can be in ANSI C asctime () format, defined in RFC1123, defined in RFC1036, or in the form "year / month / day: hour: minute: second". is needed.
	 * The date string is recognized automatically and can handle some format transformations, but it may not be recognized if the format is too different from what you expected.
	 * @param date Date string
	 */
	function Date( date:string );

	/**
	 * Specify year, month, day, hour, minute, and second Constructor
	 * @description Generate by specifying the year, month, day, hour, minute, and second
	 * @param year Year
	 * @param month Month (0 ~
	 * @param date Day
	 * @param hour time
	 * @param min Minutes
	 * @param sec Seconds
	 */
	function Date( year:int, month:int=0, date:int=1, hour:int=0, min:int=0, sec:int=0 );

	/**
	 * 4-digit year setting by regional time
	 * @param year Year
	 */
	function setYear( year:int );
	/**
	 * Acquisition of 4-digit year by regional time
	 * @return 4-digit year
	 */
	function getYear():int;
	/**
	 * Setting the month by regional time
	 * @param month Month
	 */
	function setMonth( month:int );
	/**
	 * Get the month by local time
	 * @return Month
	 */
	function getMonth():int;
	/**
	 * Setting the day by local time
	 * @param date Day
	 */
	function setDate( date:int );
	/**
	 * Get the day by local time
	 * @return Day
	 */
	function getDate():int;
	/**
	 * Time setting by local time
	 * @param hour time
	 */
	function setHours( hour:int );
	/**
	 * Acquisition of time by local time
	 * @return time
	 */
	function getHours():int;
	/**
	 * Setting minutes by regional time
	 * @param min Minutes
	 */
	function setMinutes( min:int );
	/**
	 * Acquisition of minutes by local time
	 * @return Minutes
	 */
	function getMinutes():int;
	/**
	 * Setting seconds by regional time
	 * @param sec Seconds
	 */
	function setSeconds( sec:int );
	/**
	 * Get seconds by local time
	 * @return Seconds
	 */
	function getSeconds():int;
	/**
	 * Setting the number of milliseconds elapsed since 0:00 on January 1, 1970
	 * @param time Elapsed milliseconds
	 */
	function setTime( time:int );
	/**
	 * Setting the number of milliseconds elapsed since 0:00 on January 1, 1970
	 * @description Before the multi-platform version, it was not possible to acquire in milliseconds, but the multi-platform version supports up to milliseconds.
	 * @return Elapsed milliseconds
	 */
	function getTime():int;

	/**
	 * Get the day of the week
	 * @return Day of the week
	 */
	function getDay():int;

	/**
	 * Interpretation of date strings
	 * @param daytime Date string
	 */
	function parse( daytime:string );
};
