/**
 * @description テクスチャクラス。
 * ハードウェア上のテクスチャとほぼ対応しています。
 *
 * プラグイン用にlockしてポインタを返すものを実装してもいいかもしれない。
 * VertexBufferでは実装済みだが、OpenGL ES 3.0 以降用となる。
 * Textureの場合もPBO転送となるので、OpenGL ES 3.0 以降用となって同じ。
 * ただ、テクスチャの更新はOffscreenを利用してシェーダーを使う方が良いか。
 *
 * invalidateすることでテクスチャは無効化されるため、必要なくなったら明示的にinvalidate呼び出すことを推奨します。
 */
class Texture {
	/**
	 * ファイル読み込み版コンストラクタ
	 * @param filename 画像ファイル名
	 * @param format カラーフォーマット(tcfRGBA or tcfAlpha), tcfAlpha選択時に色情報はグレイスケール化される
	 * @param is9patch 9patch情報を読み込み、9patch描画用として使用するかどうか
	 */
	function Texture( filename:string, format:int=tcfRGBA, is9patch:bool=false );

	/**
	 * Bitmapコピー版コンストラクタ
	 * @param bitmap テクスチャの元となるBitmapクラスのインスタンス
	 * @param format カラーフォーマット(tcfRGBA or tcfAlpha), tcfAlpha選択時に色情報はグレイスケール化される
	 * @param is9patch 9patch情報を読み込み、9patch描画用として使用するかどうか
	 */
	function Texture( bitmap:Bitmap, format:int=tcfRGBA, is9patch:bool=false );

	/**
	 * サイズ指定版コンストラクタ
	 * @description テクスチャの内容は未初期化なのでごみが入っている。
	 * @param width テクスチャ幅
	 * @param height テクスチャ高さ
	 * @param format カラーフォーマット(tcfRGBA or tcfAlpha)
	 */
	function Texture( width, height, format=tcfRGBA );

	/**
	 * 矩形コピー(位置指定Rect版)
	 * @param dleft コピー先左端
	 * @param dtop コピー先上端
	 * @param src Bitmapクラスのオブジェクト
	 * @param srcRect srcのコピー元矩形
	 */
	function copyRect( dleft, dtop, src, srcRect:Rect );

	/**
	 * 矩形コピー(位置指定)
	 * @param dleft コピー先左端
	 * @param dtop コピー先上端
	 * @param src Bitmapクラスのオブジェクト
	 * @param sleft コピー元左端位置
	 * @param stop コピー元上端位置
	 * @param swidth コピー元幅
	 * @param sheight コピー元高さ
	 */
	function copyRect( dleft, dtop, src, sleft, stop, swidth, sheight );

	/**
	 * 矩形コピー(全コピー)
	 * @description bitmap全体をコピーします。はみ出す場合はクリッピングされます。
	 * @param src Bitmapクラスのオブジェクト
	 */
	function copyRect( src:Bitmap );

	/**
	 * 幅(有効範囲)
	 * @description pot指定されていなければ、memoryWidthと同一
	 */
	property width;
	/**
	 * 高さ(有効範囲)
	 * @description pot指定されていなければ、memoryHeightと同一
	 */
	property height;

	/**
	 * 実際(ハードウェア上)の幅
	 */
	property memoryWidth;
	/**
	 * 実際(ハードウェア上)の高さ
	 */
	property memoryHeight;

	/**
	 * 8bitカラーかどうか(内部ではアルファテクスチャ)
	 */
	property isGray;

	/**
	 * テクスチャサイズが2の累乗値かどうか
	 */
	property isPowerOfTwo;

	/**
	 * ネイティブハンドル(環境依存)
	 * @description OpenGL ES2/3 環境下ではテクスチャID
	 */
	property nativeHandle;

	/**
	 * 拡大縮小時の補間方法
	 */
	property stretchType;

	/**
	 * 水平方向ラップモード
	 */
	property wrapModeHorizontal;
	/**
	 * 垂直方向ラップモード
	 */
	property wrapModeVertical;

	/**
	 * 9patchマージン
	 * @description is9patchを指定して読み込んだ場合Rectクラスのオブジェクトが読み取り専用でアクセスできます。
	 * 指定されていなかったり、読み取りできなかった場合はvoidです。
	 */
	property margin9Patch;

	/**
	 * 最近傍点法。stretchTypeプロパティに設定します。
	 */
	const stNearest;
	/**
	 * 線形補間。stretchTypeプロパティに設定します。
	 */
	const stLinear;

	/**
	 * 繰り返し。wrapModeHorizontal/wrapModeVerticalプロパティに設定します。
	 */
	const wmRepeat;
	/**
	 * 端色引き延ばし。wrapModeHorizontal/wrapModeVerticalプロパティに設定します。2の累乗サイズでない場合はこの定数でなければならない(default)。
	 */
	const wmClampToEdge;
	/**
	 * ミラー繰り返し。wrapModeHorizontal/wrapModeVerticalプロパティに設定します。
	 */
	const wmMirror;
};
